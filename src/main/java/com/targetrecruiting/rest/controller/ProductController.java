package com.targetrecruiting.rest.controller;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.targetrecruiting.rest.model.Item;
import com.targetrecruiting.rest.model.ProductDetails;
import com.targetrecruiting.rest.model.ProductPrice;
import com.targetrecruiting.rest.service.ServiceManager;

@RestController
public class ProductController {
	
	private static final Logger logger = LogManager.getLogger(ProductController.class);
	
	@Value("${url}")
	private String url;
	
	@Autowired
	private ServiceManager manager;
	
	@RequestMapping(method=RequestMethod.GET, value="/products/{id}")
    public ProductDetails getProductInfo(@PathVariable String id) {
		ProductDetails product = new ProductDetails();
		logger.debug("getProductInfo : "+id);
		Item item = manager.externalRestCall(url, id);
		product.setName(item.getDescription().getTitle());
		product.setId(id);
	    ProductPrice priceFromDb = manager.findByProductId(id);
	    product.setCurrent_price(priceFromDb);
	    logger.debug("Autogenerated Id : "+priceFromDb.getId());
		return product;
    } 
	
	@RequestMapping(method=RequestMethod.PUT, value="/products/{id}")
    public ProductDetails update(@PathVariable String id, @RequestBody ProductDetails details) {
		logger.debug("Update : Body - "+details.toString());
		ProductPrice prod = manager.findByProductId(id);
        if(details.getId() != null)
            prod.setProductId(details.getId());
        if(details.getCurrent_price() != null) {
            prod.setCurrency_code(details.getCurrent_price().getCurrency_code());
            prod.setValue(details.getCurrent_price().getValue());
	     }
        logger.debug("Update : Changed price - "+prod.toString());
        ProductPrice changed =manager.save(prod);
        details.setCurrent_price(changed);
        return details;
    }

}
